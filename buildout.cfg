############################################
#
# Buildout Configuration File for Standalone Plone
# ------------------------------------------------
#
# After making changes in this configuration file,
# you should stop Plone and run bin/buildout to update the components.
#
# ALWAYS back up all Plone/Zope data and components
# before changing configuration.
#
# Running "bin/buildout" will update your installation,
# installing missing components as necessary.
#
# Use "bin/buildout -n" to update many components here to the newest
# available releases.
# This will update the add-on products you've added in the eggs= lines.
# This will not, however, upgrade Plone itself (or anything else you've
# pinned with a version specification). To upgrade Plone itself, see the
# comments in "Plone Component Versions".
#
# Tutorial instructions for using zc.buildout for
# configuration management are available at:
# http://plone.org/documentation/tutorial/buildout
# Full details at http://pypi.python.org/pypi/zc.buildout
#
############################################

[buildout]
############################################
# Plone Component Versions
# ------------------------
# This version of the Unified Installer has the components of Plone 4
# preloaded so that it can install without an Internet connection.
# If you want to update, uncomment the "http://..." line below,
# edit it to point to the current version URL, comment out the
# "versions.cfg" line and run "bin/buildout" while attached to the
# Internet. Generally, you only want to do that as part of a planned migration.
# Note that if you are updating components, you should also check the versions
# section at the end of this file, since recipes or components other than
# those of Zope and Plone may need updating at the same time.
#
extends =
    base.cfg
    versions.cfg
#    http://dist.plone.org/release/4.3/versions.cfg

# If you change your Plone version, you'll also need to update
# the repository link below.
find-links +=
    http://dist.plone.org/release/4.3

# If you try to start Zope as root, it will change user id to run as
# the effective user specified here. This user id must own the var directory
# of your buildout.
effective-user = instructor
# This user will own the rest of the installation, and should be used to
# run buildout.
buildout-user = instructor
# A flag to tell the Unified Installer whether or not to document sudo use.
need-sudo = no

############################################
# Eggs
# ----
# Add an indented line to the eggs section for any Python
# eggs or packages you wish to include in your Plone instance.
#
# Note that versions may be specified here or in the [versions]
# section below. You should always specify versions that you know
# are compatible with the Plone release and at an acceptable
# development level.
#
eggs =
# standard options -------------------------------------
    Plone
#
#   Required for image handling
    Pillow
#
#   complete calendaring solution
    Solgema.fullcalendar==2.2.1
# 
#   suite of blogging modules for Plone
    collective.blog.star==1.2
# 
#     easy to use web forum
    Products.Ploneboard==3.4
# 
#     provides a GUI for managing custom workflows in Plone
    plone.app.workflowmanager==1.0a4
# 
#     through-the-web form generator
    Products.PloneFormGen==1.7.11
#
#     create and manage online slideshows
    collective.easyslideshow==2.1.2
#
#     Multilevel portal dropdown menu for Plone sites
    webcouturier.dropdownmenu==2.3.1
#
#     newsletter/mailing product
#    Products.EasyNewsletter
#
#     provides MathJax as browser resources
#    collective.mathjax==1.1.1
#
#     Create and manage your own glossaries
    Products.PloneGlossary==1.5.3
#
#     highlighting PloneGlossary terms optional per page or folder
    zest.ploneglossaryhighlight==1.0
#
#     responsive theme based on sunburst
    collective.responsivetheme==1.3.2
#
#     Graphic organizer for scientific inquiry
#     Products.Vees
#
#     Rotate, flip, blur, compress, change contrast etc plone images
    Products.ImageEditor==3.0.0
#
#     LDAP/AD integration
    plone.app.ldap==1.3.0
#
#     Representation of organisational structures
#    vs.org
#
#     better folder contents implementation
    wildcard.foldercontents==1.2.3
#
#     powerful interface to improve search within large collections
    eea.facetednavigation==5.6
#
#     enhances and extends the listing layouts capabilities
    eea.uberlisting==2.1
#
#     define locations using a map picker
#    eea.geotags
#
#     Turn external feed entries into content items
#    Products.feedfeeder
#
#     tool to incorporate part of the file system into a Plone site
#    Products.Reflecto
#
#     allows subfolders of a Plone site to appear as autonomous Plone sites
    collective.lineage==1.1
#
#     Provides system to 'rate' content on the site
    contentrating==
#
#     conduct online polls for anonymous and logged-in users
    collective.polls==
#
#     collective.geo allows to geo-reference Plone content types and to display this information over a map
#    collective.geo
#
#     provides the user interface for managing content translations
    plone.app.multilingual
#
#     create elaborate covers for Plone sites--might not be stable yet
     collective.cover
#
#     add a Page Turner view to the PDF File content type
    wc.pageturner
#
#     system for creating thumbnails/image representations for content types
#    eea.depiction
#
#     create data visualizations
#    eea.daviz
#
#     TinyMCE visual editor support for embed.ly service
#    collective.embedly
#
#     provides simple Google+, Twitter and Facebook integration for Plone Content Types
    sc.social.like
#
#     Integration of Disqus comments platform
    collective.disqus
#
#     responsive design for Plone/Diazo powered sites
    beyondskins.responsive
#
#
#     allows you to change, merge and delete keywords in Plone
    Products.PloneKeywordManager
#
#     allows you to edit documents collaboratively in real-time--needs testing/complex?
#     collective.etherpad

############################################
# ZCML Slugs
# ----------
# Some eggs need ZCML slugs to tell Zope to
# use them. This is increasingly rare.
zcml =
#    plone.reload
    vs.org
    plone.app.ldap
    eea.depiction-overrides
    eea.depiction

############################################
# Development Eggs
# ----------------
# You can use paster to create "development eggs" to
# develop new products/themes. Put these in the src/
# directory.
# You will also need to add the egg names in the
# eggs section above, and may also need to add them
# to the zcml section.
#
# Provide the *paths* to the eggs you are developing here:
develop =
#    src/my.package
     src/uwosh.double_blind_review

############################################
# var Directory
# -------------
# Sets the target directory for the "var" components of the install such as
# database and log files.
#
var-dir=${buildout:directory}/var

############################################
# Backup Directory
# ----------------
# Sets the target directory for the bin/backup and bin/snapshotbackup
# commands. Default is inside this project's var directory, but ideally
# this should be on a separate volume or backup server.
#
backups-dir=${buildout:var-dir}

############################################
# Initial User
# ------------
# This is the user id and password that will be used to create the initial
# user id that will allow you to log in and create a Plone site. This only
# sets the initial password; it will not allow you to change an already
# existing password. If you change the admin password via the web interface,
# the one below will no longer be valid.
# If you find yourself locked out of your Zope/Python installation, you may
# add an emergency user via "bin/plonectl adduser".
user=admin:2WKXFgPCcpJ5

############################################
# Debug Options
# -------------
# Start Zope/Plone instances in "fg" mode to turn on debug mode;
# this will dramatically slow Plone.
#
# Add-on developers should turn deprecation warnings on
deprecation-warnings = off
# change verbose-security to "on" for useful security errors while developing
verbose-security = off

############################################
# Parts Specification
#--------------------
# Specifies the components that should be included in the buildout.
# Most are defined in the base.cfg extension; you may add your
# own if you need them at the end of this file.
parts =
    instance
    repozo
    backup
    zopepy
    unifiedinstaller

############################################
# Major Parts
# ----------------------
# These common parts make use of sane base settings from
# base.cfg. To customize a part, just add whatever options
# you need. Read base.cfg for common settings.

[instance]
<= instance_base
recipe = plone.recipe.zope2instance
http-address = 8080


############################################
# Versions Specification
# ----------------------
# Version information supplied here will "pin" Python packages to a particular
# version number, even when you use the "newest" flag running buildout.
# Specifying versions for all packages is a good idea and can prevent
# accidental changes when you add new packages to your buildout.
# Note that versions specified here will override those specified earlier
# in the configuration, including those from the Plone and Zope version
# config files.
#
[versions]
Cheetah = 2.2.1
Products.DocFinderTab = 1.0.5
ZopeSkel = 2.21.2
collective.recipe.backup = 2.10
plone.recipe.unifiedinstaller = 4.3.1
plone.recipe.command = 1.1
plone.recipe.precompiler = 0.6
zopeskel.dexterity = 1.5.0
zopeskel.diazotheme = 1.0
